{"version":3,"sources":["components/Tweet.js","components/TweetUsername.js","components/TweetTitle.js","components/TweetTime.js","components/Retweets.js","components/Quotes.js","components/Likes.js","components/TweetData.js","components/TweetProps.js","components/TweetArea.js","components/Header.js","components/SwitchTheme.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","props","class","style","color","selectedTheme","TweetValue","TweetUsername","UsernameValue","TweetTitle","TitleValue","src","isVerified","TweetTime","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Retweets","className","RetweetValue","Quotes","QuoteValue","Likes","LikesValue","TweetData","TweetProps","state","this","React","Component","TweetArea","useState","setTweetValue","setUsernameValue","setTitleValue","setRetweetValue","setQuoteValue","setLikesValue","setVerified","background","type","onChange","e","target","value","onClick","prev","name","console","log","checked","id","alt","Header","App","toggleTheme","setState","theme","themeSwitcher","document","getElementByClass","setTheme","thumbnail","themeName","setActive","themeThumbnails","link","map","isActive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAuBeA,EArBD,SAACC,GACb,OACE,qBAAKC,MAAM,cAAX,SACE,mBACEC,MAAO,CACLC,MAC0B,UAAxBH,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,eAEkB,SAAxBJ,EAAMI,cADN,OAGA,IATV,SAYGJ,EAAMK,gBCPAC,EARO,SAACN,GACrB,OACE,qBAAKC,MAAM,iBAAX,SACE,mCAAMD,EAAMO,oBCqBHC,EAxBI,SAACR,GAClB,OACE,sBAAKC,MAAM,cAAX,UACE,oBACEC,MAAO,CACLC,MAC0B,UAAxBH,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,eAEkB,SAAxBJ,EAAMI,cADN,OAGA,IATV,SAYGJ,EAAMS,aAET,qBAAKR,MAAM,mBAAX,SACE,qBAAKS,IAAKV,EAAMW,WAAa,4BAA8B,WCEpDC,EApBG,WAChB,IAAIC,EAAc,IAAIC,KAClBC,EACFF,EAAYG,UACZ,KACCH,EAAYI,WAAa,GAC1B,IACAJ,EAAYK,cACZ,SACAL,EAAYM,WACZ,IACAN,EAAYO,aACZ,IACAP,EAAYQ,aACd,OACE,qBAAKpB,MAAM,aAAX,SACE,8BAAIc,EAAJ,iCCKSO,EArBE,SAACtB,GAChB,OACE,qBAAKuB,UAAU,mBAAf,SACE,qBACErB,MAAO,CACLC,MAC0B,UAAxBH,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,eAEkB,SAAxBJ,EAAMI,cADN,OAGA,IATV,UAYE,sBAAMmB,UAAU,OAAhB,SAAwBvB,EAAMwB,eAZhC,kBCkBSC,EArBA,SAACzB,GACd,OACE,qBAAKuB,UAAU,mBAAf,SACE,qBACErB,MAAO,CACLC,MAC0B,UAAxBH,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,eAEkB,SAAxBJ,EAAMI,cADN,OAGA,IATV,UAYE,sBAAMmB,UAAU,OAAhB,SAAwBvB,EAAM0B,aAZhC,sBCkBSC,EArBD,SAAC3B,GACb,OACE,qBAAKuB,UAAU,mBAAf,SACE,qBACErB,MAAO,CACLC,MAC0B,UAAxBH,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,eAEkB,SAAxBJ,EAAMI,cADN,OAGA,IATV,UAYE,sBAAMmB,UAAU,OAAhB,SAAwBvB,EAAM4B,aAZhC,eCoBSC,EAnBG,SAAC7B,GACjB,OACE,sBAAKuB,UAAU,aAAf,UACE,cAAC,EAAD,CACEC,aAAcxB,EAAMwB,aACpBpB,cAAeJ,EAAMI,gBAEvB,cAAC,EAAD,CACEsB,WAAY1B,EAAM0B,WAClBtB,cAAeJ,EAAMI,gBAEvB,cAAC,EAAD,CACEwB,WAAY5B,EAAM4B,WAClBxB,cAAeJ,EAAMI,oBCHd0B,E,kDAbb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACD+B,MAAQ,GAFI,E,qDAKjB,OACE,8BACE,6BAAKC,KAAKhC,MAAMW,mB,GARCsB,IAAMC,WC+IhBC,EAzIG,SAACnC,GAAW,IAAD,EACSoC,mBAAS,IADlB,mBACpB/B,EADoB,KACRgC,EADQ,OAMeD,mBAAS,IANxB,mBAMpB7B,EANoB,KAML+B,EANK,OAWSF,mBAAS,IAXlB,mBAWpB3B,EAXoB,KAWR8B,EAXQ,OAgBaH,mBAAS,IAhBtB,mBAgBpBZ,EAhBoB,KAgBNgB,EAhBM,OAqBSJ,mBAAS,IArBlB,mBAqBpBV,EArBoB,KAqBRe,EArBQ,OA0BSL,mBAAS,IA1BlB,mBA0BpBR,EA1BoB,KA0BRc,EA1BQ,OA+BON,oBAAS,GA/BhB,mBA+BpBzB,EA/BoB,KA+BRgC,EA/BQ,KAqC3B,OACE,qBAAK1C,MAAM,YAAYC,MAAO,CAAE0C,WAAY5C,EAAMI,eAAlD,SACE,sBAAKH,MAAM,iBAAX,UACE,sBAAKsB,UAAU,YAAf,UACE,sBAAKtB,MAAM,mBAAX,UACE,kDACA,uBAAO4C,KAAK,OAAO5C,MAAM,UAAU6C,SAzCxB,SAACC,GACpBV,EAAcU,EAAEC,OAAOC,aA0CjB,sBAAKhD,MAAM,sBAAX,UACE,sDACA,uBAAO4C,KAAK,OAAOC,SAxCL,SAACC,GACvBT,EAAiBS,EAAEC,OAAOC,aAyCpB,sBAAKhD,MAAM,mBAAX,UACE,mDACA,uBAAO4C,KAAK,OAAOC,SAvCR,SAACC,GACpBR,EAAcQ,EAAEC,OAAOC,aAyCjB,sBAAKhD,MAAM,kBAAX,UACE,sBAAKA,MAAM,qBAAX,UACE,2DACA,uBAAO4C,KAAK,OAAOC,SAxCR,SAACC,GACtBP,EAAgBO,EAAEC,OAAOC,aA0CjB,sBAAKhD,MAAM,oBAAX,UACE,yDACA,uBAAO4C,KAAK,OAAOC,SAxCV,SAACC,GACpBN,EAAcM,EAAEC,OAAOC,aA0Cf,sBAAKhD,MAAM,mBAAX,UACE,wDACA,uBAAO4C,KAAK,OAAOC,SAxCV,SAACC,GACpBL,EAAcK,EAAEC,OAAOC,mBA4CnB,qBAAKhD,MAAM,aAAX,SACE,sBACEA,MAAM,sBACNiD,QAAS,WACPP,GAAY,SAACQ,GAAD,OAAWA,MAH3B,UAME,uBACEN,KAAK,WACLO,KAAK,aACLN,SAlDW,WACrBH,GAAYhC,GACZ0C,QAAQC,IAAI3C,IAiDF4C,QAAS5C,IAEX,gDAIJ,cAAC,EAAD,CAAYA,WAAYA,IACxB,sBACEV,MAAM,QACNuD,GAAG,YACHtD,MAAO,CACL0C,WAC0B,UAAxB5C,EAAMI,cACF,OACwB,QAAxBJ,EAAMI,cACN,UACwB,SAAxBJ,EAAMI,cACN,OACA,IAXV,UAcE,sBAAKH,MAAM,eAAX,UACE,qBAAKA,MAAM,eAAX,SACE,qBACES,IAAI,iCACJ+C,IAAI,SACJxD,MAAM,aAIV,sBAAKA,MAAM,eAAX,UACE,cAAC,EAAD,CACEQ,WAAYA,EACZL,cAAeJ,EAAMI,cACrBO,WAAYA,IAEd,cAAC,EAAD,CAAeJ,cAAeA,UAIlC,cAAC,EAAD,CAAOF,WAAYA,EAAYD,cAAeJ,EAAMI,gBACpD,cAAC,EAAD,IACA,cAAC,EAAD,CACEoB,aAAcA,EACdI,WAAYA,EACZF,WAAYA,EACZtB,cAAeJ,EAAMI,yBCzHlBsD,GCdWzB,IAAMC,UDAjB,WACb,OACE,qBAAKsB,GAAG,SAAR,SACE,qBAAKvD,MAAM,YAAX,SACE,qBAAKA,MAAM,gBAAX,SACE,kDACkB,sBAAMA,MAAM,YAAZ,8B,kBE+Eb0D,E,kDAxEb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IAoBR4D,YAAc,SAAC5D,GACb,EAAK6D,SAAS,CAAEC,MAA4B,UAArB,EAAK/B,MAAM+B,MAAoB,SAAW,UACjET,QAAQC,IAAI,EAAKvB,MAAM+B,QAvBN,EA0BnBC,cAAgB,WAEQ,UADqB,SAArB,EAAKhC,MAAM+B,MAAmB,OAAS,MAE3DE,SAASC,kBAAkB,aAAa/D,MAAM0C,WAAa,QAG7DS,QAAQC,IAAI,WAhCK,EAmCnBY,SAAW,SAACC,GACV,EAAKN,SAAS,CAAEC,MAAOK,EAAUC,YACjCf,QAAQC,IAAIa,IArCK,EAwCnBE,UAAY,SAACF,GACXA,EAAU5C,UAAY,QAvCtB,EAAKQ,MAAQ,CACX+B,MAAO,OACPQ,gBAAiB,CACf,CACEC,KAAM,yBACNH,UAAW,SAEb,CACEG,KAAM,wBACNH,UAAW,QAEb,CACEG,KAAM,uBACNH,UAAW,SAfA,E,qDA4CT,IAAD,OACP,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKiC,GAAG,iBAAR,SACE,qBAAKvD,MAAM,YAAX,SACE,qBAAKuD,GAAG,eAAR,SACGxB,KAAKD,MAAMuC,gBAAgBE,KAAI,SAACL,GAC/B,IAAMM,EACJN,EAAUC,YAAc,EAAKrC,MAAM+B,MAAQ,SAAW,GACxD,OACE,qBACEvC,UAAU,eACV2B,QAAS,kBAAM,EAAKgB,SAASC,IAC7BX,GAAIiB,EAHN,SAKE,qBAAK/D,IAAKyD,EAAUI,kBAOhC,cAAC,EAAD,CAAWnE,cAAe4B,KAAKD,MAAM+B,e,GApE3B7B,IAAMC,WCFTwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.8d876409.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Tweet = (props) => {\r\n  return (\r\n    <div class=\"tweet_tweet\">\r\n      <p\r\n        style={{\r\n          color:\r\n            props.selectedTheme === \"light\"\r\n              ? \"#000\"\r\n              : props.selectedTheme === \"dim\"\r\n              ? \"#fff\"\r\n              : props.selectedTheme === \"dark\"\r\n              ? \"#fff\"\r\n              : \"\",\r\n        }}\r\n      >\r\n        {props.TweetValue}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\n\r\nconst TweetUsername = (props) => {\r\n  return (\r\n    <div class=\"tweet_username\">\r\n      <h4>@{props.UsernameValue}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetUsername;\r\n","import React from \"react\";\r\n\r\nconst TweetTitle = (props) => {\r\n  return (\r\n    <div class=\"tweet_title\">\r\n      <h3\r\n        style={{\r\n          color:\r\n            props.selectedTheme === \"light\"\r\n              ? \"#000\"\r\n              : props.selectedTheme === \"dim\"\r\n              ? \"#fff\"\r\n              : props.selectedTheme === \"dark\"\r\n              ? \"#fff\"\r\n              : \"\",\r\n        }}\r\n      >\r\n        {props.TitleValue}\r\n      </h3>\r\n      <div class=\"tweet_title__img\">\r\n        <img src={props.isVerified ? \"images/verified-light.png\" : \"\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetTitle;\r\n","import React from \"react\";\r\n\r\nconst TweetTime = () => {\r\n  var currentdate = new Date();\r\n  var datetime =\r\n    currentdate.getDate() +\r\n    \"/\" +\r\n    (currentdate.getMonth() + 1) +\r\n    \"/\" +\r\n    currentdate.getFullYear() +\r\n    \" · \" +\r\n    currentdate.getHours() +\r\n    \":\" +\r\n    currentdate.getMinutes() +\r\n    \":\" +\r\n    currentdate.getSeconds();\r\n  return (\r\n    <div class=\"tweet_time\">\r\n      <p>{datetime} · Twitter for iPhone</p>\r\n    </div>\r\n  );\r\n};\r\nexport default TweetTime;\r\n","import React from \"react\";\r\n\r\nconst Retweets = (props) => {\r\n  return (\r\n    <div className=\"tweet_data__info\">\r\n      <h5\r\n        style={{\r\n          color:\r\n            props.selectedTheme === \"light\"\r\n              ? \"#000\"\r\n              : props.selectedTheme === \"dim\"\r\n              ? \"#fff\"\r\n              : props.selectedTheme === \"dark\"\r\n              ? \"#fff\"\r\n              : \"\",\r\n        }}\r\n      >\r\n        <span className=\"bold\">{props.RetweetValue}</span> Retweets\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Retweets;\r\n","import React from \"react\";\r\n\r\nconst Quotes = (props) => {\r\n  return (\r\n    <div className=\"tweet_data__info\">\r\n      <h5\r\n        style={{\r\n          color:\r\n            props.selectedTheme === \"light\"\r\n              ? \"#000\"\r\n              : props.selectedTheme === \"dim\"\r\n              ? \"#fff\"\r\n              : props.selectedTheme === \"dark\"\r\n              ? \"#fff\"\r\n              : \"\",\r\n        }}\r\n      >\r\n        <span className=\"bold\">{props.QuoteValue}</span> Quote Tweets\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nconst Likes = (props) => {\r\n  return (\r\n    <div className=\"tweet_data__info\">\r\n      <h5\r\n        style={{\r\n          color:\r\n            props.selectedTheme === \"light\"\r\n              ? \"#000\"\r\n              : props.selectedTheme === \"dim\"\r\n              ? \"#fff\"\r\n              : props.selectedTheme === \"dark\"\r\n              ? \"#fff\"\r\n              : \"\",\r\n        }}\r\n      >\r\n        <span className=\"bold\">{props.LikesValue}</span> Likes\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\n\r\nimport Retweets from \"./Retweets\";\r\nimport Quotes from \"./Quotes\";\r\nimport Likes from \"./Likes\";\r\n\r\nconst TweetData = (props) => {\r\n  return (\r\n    <div className=\"tweet_data\">\r\n      <Retweets\r\n        RetweetValue={props.RetweetValue}\r\n        selectedTheme={props.selectedTheme}\r\n      />\r\n      <Quotes\r\n        QuoteValue={props.QuoteValue}\r\n        selectedTheme={props.selectedTheme}\r\n      />\r\n      <Likes\r\n        LikesValue={props.LikesValue}\r\n        selectedTheme={props.selectedTheme}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetData;\r\n","import React from \"react\";\r\n\r\nclass TweetProps extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.props.isVerified}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TweetProps;\r\n","import React, { useState } from \"react\";\r\nimport Tweet from \"./Tweet\";\r\nimport TweetUsername from \"./TweetUsername\";\r\nimport TweetTitle from \"./TweetTitle\";\r\nimport TweetTime from \"./TweetTime\";\r\nimport TweetData from \"./TweetData\";\r\nimport TweetProps from \"./TweetProps\";\r\n\r\nconst TweetArea = (props) => {\r\n  const [TweetValue, setTweetValue] = useState(\"\");\r\n  const TweetHandler = (e) => {\r\n    setTweetValue(e.target.value);\r\n  };\r\n\r\n  const [UsernameValue, setUsernameValue] = useState(\"\");\r\n  const UsernameHandler = (e) => {\r\n    setUsernameValue(e.target.value);\r\n  };\r\n\r\n  const [TitleValue, setTitleValue] = useState(\"\");\r\n  const TitleHandler = (e) => {\r\n    setTitleValue(e.target.value);\r\n  };\r\n\r\n  const [RetweetValue, setRetweetValue] = useState(\"\");\r\n  const RetweetHandler = (e) => {\r\n    setRetweetValue(e.target.value);\r\n  };\r\n\r\n  const [QuoteValue, setQuoteValue] = useState(\"\");\r\n  const QuoteHandler = (e) => {\r\n    setQuoteValue(e.target.value);\r\n  };\r\n\r\n  const [LikesValue, setLikesValue] = useState(\"\");\r\n  const LikesHandler = (e) => {\r\n    setLikesValue(e.target.value);\r\n  };\r\n\r\n  const [isVerified, setVerified] = useState(false);\r\n  const handleVerified = () => {\r\n    setVerified(isVerified ? false : true);\r\n    console.log(isVerified);\r\n  };\r\n\r\n  return (\r\n    <div class=\"tweetArea\" style={{ background: props.selectedTheme }}>\r\n      <div class=\"innerContainer\">\r\n        <div className=\"inputArea\">\r\n          <div class=\"tweetInput_tweet\">\r\n            <h5>Enter your Tweet</h5>\r\n            <input type=\"text\" class=\"onTweet\" onChange={TweetHandler} />\r\n          </div>\r\n          <div class=\"tweetInput_username\">\r\n            <h5>What is the username</h5>\r\n            <input type=\"text\" onChange={UsernameHandler} />\r\n          </div>\r\n          <div class=\"tweetInput_title\">\r\n            <h5>What is the title</h5>\r\n            <input type=\"text\" onChange={TitleHandler} />\r\n          </div>\r\n\r\n          <div class=\"tweetInput_data\">\r\n            <div class=\"tweetInput_retweet\">\r\n              <h5>What is the retweet count</h5>\r\n              <input type=\"text\" onChange={RetweetHandler} />\r\n            </div>\r\n\r\n            <div class=\"tweetInput_quotes\">\r\n              <h5>What is the quote count</h5>\r\n              <input type=\"text\" onChange={QuoteHandler} />\r\n            </div>\r\n\r\n            <div class=\"tweetInput_likes\">\r\n              <h5>What is the like count</h5>\r\n              <input type=\"text\" onChange={LikesHandler} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"tweetProps\">\r\n          <div\r\n            class=\"tweetProps_verified\"\r\n            onClick={() => {\r\n              setVerified((prev) => !prev);\r\n            }}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isVerified\"\r\n              onChange={handleVerified}\r\n              checked={isVerified}\r\n            />\r\n            <h5>Verified?</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <TweetProps isVerified={isVerified} />\r\n        <div\r\n          class=\"tweet\"\r\n          id=\"tweetHere\"\r\n          style={{\r\n            background:\r\n              props.selectedTheme === \"light\"\r\n                ? \"#fff\"\r\n                : props.selectedTheme === \"dim\"\r\n                ? \"#15202b\"\r\n                : props.selectedTheme === \"dark\"\r\n                ? \"#000\"\r\n                : \"\",\r\n          }}\r\n        >\r\n          <div class=\"tweet_header\">\r\n            <div class=\"tweet_avatar\">\r\n              <img\r\n                src=\"https://via.placeholder.com/50\"\r\n                alt=\"avatar\"\r\n                class=\"avatar\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"tweet_person\">\r\n              <TweetTitle\r\n                TitleValue={TitleValue}\r\n                selectedTheme={props.selectedTheme}\r\n                isVerified={isVerified}\r\n              />\r\n              <TweetUsername UsernameValue={UsernameValue} />\r\n            </div>\r\n          </div>\r\n\r\n          <Tweet TweetValue={TweetValue} selectedTheme={props.selectedTheme} />\r\n          <TweetTime />\r\n          <TweetData\r\n            RetweetValue={RetweetValue}\r\n            LikesValue={LikesValue}\r\n            QuoteValue={QuoteValue}\r\n            selectedTheme={props.selectedTheme}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetArea;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div id=\"header\">\r\n      <div class=\"container\">\r\n        <div class=\"header_header\">\r\n          <h1>\r\n            Generate a fake <span class=\"blue bold\">Tweet</span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass SwitchTheme extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>test</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SwitchTheme;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport TweetArea from \"./components/TweetArea\";\nimport SwitchTheme from \"./components/SwitchTheme\";\nimport Header from \"./components/Header\";\nimport html2canvas from \"html2canvas\";\nimport { render } from \"@testing-library/react\";\n\nfunction screenshot() {\n  html2canvas(document.querySelector(\"#tweetHere\")).then((canvas) => {\n    document.body.appendChild(canvas);\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"dark\",\n      themeThumbnails: [\n        {\n          link: \"images/light-theme.png\",\n          themeName: \"light\",\n        },\n        {\n          link: \"images/dark-theme.png\",\n          themeName: \"dark\",\n        },\n        {\n          link: \"images/dim-theme.png\",\n          themeName: \"dim\",\n        },\n      ],\n    };\n  }\n\n  toggleTheme = (props) => {\n    this.setState({ theme: this.state.theme === \"light\" ? \"middle\" : \"light\" });\n    console.log(this.state.theme);\n  };\n\n  themeSwitcher = () => {\n    const selectedTheme = this.state.theme === \"dark\" ? \"dark\" : \"\";\n    if (selectedTheme === \"dark\") {\n      document.getElementByClass(\"tweetArea\").style.background = \"blue\";\n    }\n\n    console.log(\"It ran\");\n  };\n\n  setTheme = (thumbnail) => {\n    this.setState({ theme: thumbnail.themeName });\n    console.log(thumbnail);\n  };\n\n  setActive = (thumbnail) => {\n    thumbnail.className = \"Test\";\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id=\"theme_switcher\">\n          <div class=\"container\">\n            <div id=\"theme_images\">\n              {this.state.themeThumbnails.map((thumbnail) => {\n                const isActive =\n                  thumbnail.themeName === this.state.theme ? \"active\" : \"\";\n                return (\n                  <div\n                    className=\"theme__image\"\n                    onClick={() => this.setTheme(thumbnail)}\n                    id={isActive}\n                  >\n                    <img src={thumbnail.link}></img>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        <TweetArea selectedTheme={this.state.theme} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}